{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAKaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCDPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OAEI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCJCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAbAC,qBAAW,WACPxB,EAASC,GACHwB,MAAM,SAAAC,GAEAH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIzB,CAACpB,IAGEqB,EDlBwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,wCAAd,SAAuDhB,IACtDoB,GAAW,mBAAGJ,UAAU,mCAAb,qCAEN,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAK,SAACC,GAAD,OACR,aADkB,CACjB,EAAD,eAESA,GADEA,EAAIC,aEd9BgB,EAAS,WAAO,IAAD,EAEYzC,mBAAS,CAAC,gBAFtB,mBAEjB0C,EAFiB,KAEL3C,EAFK,KAIxB,OACI,gCACI,wDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OAClB,cAAC,EAAD,CAEGA,SAAYA,GADLA,YCTnC6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e286f9b2.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport React from 'react'\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputvalue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n//============================================================================\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputvalue.trim().length > 2){\r\n           //console.log('Submit hecho')\r\n            setCategories( cats => [ inputvalue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n//=============================================================================   \r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input \r\n                type=\"text\"\r\n                value={ inputvalue }\r\n                onChange={ handleInputChange }\r\n                />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\n//============================================================================\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=j6Vj0eEQAct3mlamAVo4rF1MBE3ZKAFy`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map (img =>{\r\n        \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={ url } alt={ title } />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Aguanta que queda poco!</p>}\r\n\r\n                { <div className=\"card-grid\">\r\n                    {\r\n                        images.map( (img) =>( //de esta manera podemos listar cada elemento por si id y su titulo\r\n                            <GifGridItem\r\n                                key = {img.id} \r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n                </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect( () => { \r\n        getGifs( category)\r\n             .then( imgs =>{\r\n\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n\r\n             });\r\n     }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\nexport const GifApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Mandalorian']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Carlos Gif Application</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        (<GifGrid \r\n                            key = {category} \r\n                            category = {category}/>))\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  { GifApp }  from './GifApp'\n\n\n\nReactDOM.render(\n  \n    <GifApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}